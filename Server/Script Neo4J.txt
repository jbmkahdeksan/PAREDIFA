{"alphabet":["1","0"],"states":[
 {"id":1635026207553,"name":"S0","coord":{"x":326,"y":185},"radius":20,"end":false,"start":true}
,{"id":1635026207935,"name":"S1","coord":{"x":700,"y":105},"radius":20,"end":true,"start":false}
,{"id":1635026209193,"name":"S2","coord":{"x":662,"y":330},"radius":20,"end":false,"start":false}],
"transitions":[
 {"id":1635026217885,"state_src_id":1635026207553,"state_dst_id":1635026207553,"symbols":["0"]}
,{"id":1635026221915,"state_src_id":1635026207553,"state_dst_id":1635026207935,"symbols":["1"]}
,{"id":1635026225366,"state_src_id":1635026207935,"state_dst_id":1635026207935,"symbols":["1"]}
,{"id":1635026229271,"state_src_id":1635026207935,"state_dst_id":1635026209193,"symbols":["0"]}
,{"id":1635026251272,"state_src_id":1635026209193,"state_dst_id":1635026209193,"symbols":["0","1"]}]}


create(:Repository{name:'Repo'});

create(:Automata{ id : '0' , name:'Aut'});

create(:State{id:'1635026207553', name:'S0' , coord:['326','185'], radius:'20',end:false, start:true})
create(:State{id:'1635026207935', name:'S1' , coord:['700','105'], radius:'20',end:true, start:false})
create(:State{id:'1635026209193', name:'S2' , coord:['662','330'], radius:'20',end:false, start:false})

create(:Alphabet{id: 'Alp0' ,name:'Alp0', symbols:['0','1']});

create(:Transition{ id:'1635026217885' , name:'T0', state_src_id:'1635026207553', src_coord:point({x: 50, y: 50}), state_dst_id:'1635026207553', dst_coord:point({x: 50, y: 50}), symbols:['0'], coordTemp: point({x: 1, y: 50})});
create(:Transition{ id:'1635026221915' , name:'T1', state_src_id:'1635026207553', src_coord:point({x: 50, y: 50}), state_dst_id:'1635026207935', dst_coord:point({x: 50, y: 50}), symbols:['1'], coordTemp: point({x: 20, y: 50})});
create(:Transition{ id:'1635026225366' , name:'T2', state_src_id:'1635026207935', src_coord:point({x: 50, y: 50}), state_dst_id:'1635026207935', dst_coord:point({x: 50, y: 50}), symbols:['1'], coordTemp: point({x: 30, y: 50})});
create(:Transition{ id:'1635026229271' , name:'T3', state_src_id:'1635026207935', src_coord:point({x: 50, y: 50}), state_dst_id:'1635026209193', dst_coord:point({x: 50, y: 50}), symbols:['0'], coordTemp: point({x: 50, y: 50})});
create(:Transition{ id:'1635026251272' , name:'T4', state_src_id:'1635026209193', src_coord:point({x: 50, y: 50}), state_dst_id:'1635026209193', dst_coord:point({x: 50, y: 50}), symbols:['0','1'], coordTemp: point({x: 70, y: 50})});

match(r:Repository) , (a:Automata) where r.name = 'Repo' and a.id = '0' create(r)-[:contains]-> (a);
match(a:Automata) , (s:State) where a.id = '0' and s.name = 'S0' create(a)-[:states]->(s);
match(a:Automata) , (s:State) where a.id = '0' and s.name = 'S1' create(a)-[:states]->(s);
match(a:Automata) , (s:State) where a.id = '0' and s.name = 'S2' create(a)-[:states]->(s);

match(a:Automata) , (alp:Alphabet) where a.id = '0' and alp.name = 'Alp0' create(a)-[:alphabet]->(alp);

match(a:Automata) , (tr:Transition) where a.id = '0' and tr.id = '1635026217885' create(a)-[:transitions]->(tr);
match(a:Automata) , (tr:Transition) where a.id = '0' and tr.id = '1635026221915' create(a)-[:transitions]->(tr);
match(a:Automata) , (tr:Transition) where a.id = '0' and tr.id = '1635026225366' create(a)-[:transitions]->(tr);
match(a:Automata) , (tr:Transition) where a.id = '0' and tr.id = '1635026229271' create(a)-[:transitions]->(tr);
match(a:Automata) , (tr:Transition) where a.id = '0' and tr.id = '1635026251272' create(a)-[:transitions]->(tr);



create(:Automata{ id : '1' , name:'Aut'});

create(:StateList{id : 'SL1' , name:'SL1'});
create(:State{id:'1635026207553', name:'S3' , coord:['326','185'], radius:'20',end:false, start:true})
create(:State{id:'1635026207935', name:'S4' , coord:['700','105'], radius:'20',end:true, start:false})
create(:State{id:'1635026209193', name:'S5' , coord:['662','330'], radius:'20',end:false, start:false})

create(:Alphabet{id: 'Alp1' , name:'Alp1', symbols:['0','1']});

create(:TransitionList{id:'TL1' , name:'TL1'});
create(:Transition{ id:'1635026217885' , name:'T5', state_src_id:'1635026207553', state_dst_id:'1635026207553', symbols:['0']});
create(:Transition{ id:'1635026221915' , name:'T6', state_src_id:'1635026207553', state_dst_id:'1635026207935', symbols:['1']});
create(:Transition{ id:'1635026225366' , name:'T7', state_src_id:'1635026207935', state_dst_id:'1635026207935', symbols:['1']});
create(:Transition{ id:'1635026229271' , name:'T8', state_src_id:'1635026207935', state_dst_id:'1635026209193', symbols:['0']});
create(:Transition{ id:'1635026251272' , name:'T9', state_src_id:'1635026209193', state_dst_id:'1635026209193', symbols:['0','1']});

match(r:Repository) , (a:Automata) where r.name = 'Repo' and a.id = '1' create(r)-[:contains]-> (a);
match(a:Automata) , (sl:StateList) where a.id = '1' and sl.name = 'SL1' create(a)-[:stateList]->(sl);
match(sl:StateList) , (s:State) where sl.name = 'SL1' and s.name = 'S3' create(sl)-[:has]->(s);
match(sl:StateList) , (s:State) where sl.name = 'SL1' and s.name = 'S4' create(sl)-[:has]->(s);
match(sl:StateList) , (s:State) where sl.name = 'SL1' and s.name = 'S5' create(sl)-[:has]->(s);

match(a:Automata) , (alp:Alphabet) where a.id = '1' and alp.name = 'Alp1' create(a)-[:alphabet]->(alp);

match(a:Automata) , (trl:TransitionList) where a.id = '1' and trl.name = 'TL1' create(a)-[:transitionList]->(trl);
match(trl:TransitionList) , (tr:Transition) where trl.name = 'TL1' and tr.name = 'T5' create(trl)-[:has]->(tr);
match(trl:TransitionList) , (tr:Transition) where trl.name = 'TL1' and tr.name = 'T6' create(trl)-[:has]->(tr);
match(trl:TransitionList) , (tr:Transition) where trl.name = 'TL1' and tr.name = 'T7' create(trl)-[:has]->(tr);
match(trl:TransitionList) , (tr:Transition) where trl.name = 'TL1' and tr.name = 'T8' create(trl)-[:has]->(tr);
match(trl:TransitionList) , (tr:Transition) where trl.name = 'TL1' and tr.name = 'T9' create(trl)-[:has]->(tr);



---Ejemplo de Query
match(a :Automata)-[:stateList]->(:StateList)-[:has]->(s:State) where a.id = 0 return s;

match (:Automata{id:0})-[:stateList]->(:StateList)-[:has]->(s:State) return s;
match (:Automata{id:0})-[:alphabet]->(a:Alphabet) return a;
match (:Automata{id:0})-[:transitionList]->(:TransitionList)-[:has]->(t:Transition) return t;

///Query final 
match (:Automata{id:0})-[:stateList]->(:StateList)-[:has]->(s:State) OPTIONAL MATCH 
(:Automata{id:0})-[:alphabet]->(a:Alphabet) OPTIONAL MATCH 
(:Automata{id:0})-[:transitionList]->(:TransitionList)-[:has]->(t:Transition) return s,a,t;